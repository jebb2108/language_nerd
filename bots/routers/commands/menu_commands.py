from aiogram import F, Router
from aiogram.filters import Command
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    WebAppInfo,
    CallbackQuery,
)

from translations import BUTTONS, QUESTIONARY # noqa
from utils.filters import IsBotFilter # noqa
from config import BOT_TOKEN_MAIN # noqa
from middlewares.resources_middleware import ResourcesMiddleware # noqa

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router(name=__name__)

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ–∫–µ–Ω—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
router.message.filter(IsBotFilter(BOT_TOKEN_MAIN))
router.callback_query.filter(IsBotFilter(BOT_TOKEN_MAIN))


@router.message(Command("menu"), IsBotFilter(BOT_TOKEN_MAIN))
async def show_main_menu(
        message: Message,
        state: FSMContext,
        database: ResourcesMiddleware,
):
    await state.update_data(
        user_id= message.from_user.id,
        username=message.from_user.username or "",
        first_name=message.from_user.first_name or "",
        lang_code=message.from_user.language_code or "en",
        db=database,
    )
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ—Ä—ë–º –∏–∑ –ë–î, –∞ –Ω–µ –∏–∑ state.
    """
    user = message.from_user
    user_id = user.id
    first_name = user.first_name or ""

    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–∑ –ë–î
    user_info = await database.get_user_info(user_id)
    # lang_code = user_info[-1]

    # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å user_id –¥–ª—è Web App
    web_app_url = f"https://lllang.site/?user_id={user_id}"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=BUTTONS["dictionary"][lang_code],
                web_app=WebAppInfo(url=web_app_url),
            ),
        ],
        [
            InlineKeyboardButton(
                text=BUTTONS["find_partner"][lang_code],
                url="https://t.me/lllang_onlinebot",
            ),
        ],
        [
            InlineKeyboardButton(
                text=BUTTONS["about_bot"][lang_code],
                callback_data="about",
            ),
            InlineKeyboardButton(
                text=BUTTONS["support"][lang_code],
                url="https://t.me/user_bot6426",
            ),
        ],
    ])

    await message.answer(
        f"{BUTTONS['hello'][lang_code]} <b>{first_name}</b>!\n\n"
        f"{QUESTIONARY['welcome'][lang_code]}",
        reply_markup=keyboard,
        parse_mode=ParseMode.HTML,
    )


@router.callback_query(F.data == "about", IsBotFilter(BOT_TOKEN_MAIN))
async def about(callback: CallbackQuery, database: ResourcesMiddleware):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û –±–æ—Ç–µ".
    –ë–µ—Ä—ë–º —Ç–µ–∫—Å—Ç –∏–∑ QUESTIONARY, –Ω–∏—á–µ–≥–æ –Ω–µ —Ö—Ä–∞–Ω–∏–º –≤ state.
    """

    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø—Ä—è–º–æ –∏–∑ –ë–î
    user_info = await database.get_user_info(callback.from_user.id)

    lang_code = user_info[-1]

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô Go Back", callback_data="go_back")]
    ])

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        QUESTIONARY["about"][lang_code],
        reply_markup=keyboard,
        parse_mode=ParseMode.HTML,
    )
    await callback.answer()  # —É–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ


@router.callback_query(F.data == "go_back", IsBotFilter(BOT_TOKEN_MAIN))
async def go_back(
        callback: CallbackQuery,
        state: FSMContext,
):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞—è —Ç–µ –∂–µ –∫–Ω–æ–ø–∫–∏.
    """
    data = await state.get_data()
    user_id = data.get("user_id")
    first_name = data.get("first_name")
    lang_code = data.get("lang_code")

    web_app_url = f"https://lllang.site/?user_id={user_id}"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=BUTTONS["dictionary"][lang_code],
                web_app=WebAppInfo(url=web_app_url),
            ),
        ],
        [
            InlineKeyboardButton(
                text=BUTTONS["find_partner"][lang_code],
                url="https://t.me/lllang_onlinebot",
            ),
        ],
        [
            InlineKeyboardButton(
                text=BUTTONS["about_bot"][lang_code],
                callback_data="about",
            ),
            InlineKeyboardButton(
                text=BUTTONS["support"][lang_code],
                url="https://t.me/user_bot6426",
            ),
        ],
    ])

    await callback.message.edit_text(
        f"{BUTTONS['hello'][lang_code]} <b>{first_name}</b>!\n\n"
        f"{QUESTIONARY['welcome'][lang_code]}",
        reply_markup=keyboard,
        parse_mode=ParseMode.HTML,
    )
    await callback.answer()
