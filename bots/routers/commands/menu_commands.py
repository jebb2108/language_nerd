import os

from aiogram import F, Router
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo, CallbackQuery

from config import BUTTONS, QUESTIONARY # noqa
from filters import IsBotFilter # noqa

router = Router(name=__name__)
# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ–∫–µ–Ω—É
BOT_TOKEN_MAIN = os.getenv("BOT_TOKEN_MAIN")
router.message.filter(IsBotFilter(BOT_TOKEN_MAIN))
router.callback_query.filter(IsBotFilter(BOT_TOKEN_MAIN))

async def show_main_menu(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    data = await state.get_data()
    user_id = data["user_id"]
    first_name = data["first_name"]
    lang_code = data["lang_code"]

    # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å user_id
    web_app_url = f"https://lllang.site/index.html?user_id={user_id}"

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π Web App
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=BUTTONS["dictionary"][lang_code], web_app=WebAppInfo(url=web_app_url)),
        ],
        [
            InlineKeyboardButton(text=BUTTONS["find_partner"][lang_code], url="https://t.me/lllang_onlinebot"),
        ],
        [
            InlineKeyboardButton(text=BUTTONS["about_bot"][lang_code], callback_data="about"),
            InlineKeyboardButton(text=BUTTONS["support"][lang_code], url="https://t.me/user_bot6426"),
        ],
    ])

    await message.answer(
        f"{BUTTONS['hello'][lang_code]}<b>{first_name}</b>!\n\n{QUESTIONARY['welcome'][lang_code]}",
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–∞–≤—ã—á–∫–∏
        reply_markup=keyboard,
        parse_mode=ParseMode.HTML
    )


@router.callback_query(F.data == "about")
async def about(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û –±–æ—Ç–µ"
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
    """

    data = await state.get_data()
    lang_code = data["lang_code"]
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô Go Back", callback_data="go_back")]
    ])

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è –µ–≥–æ –Ω–∞ —Ç–µ–∫—Å—Ç "–û –±–æ—Ç–µ"
    await callback.message.edit_text(QUESTIONARY["about"][lang_code], reply_markup=keyboard)
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback (—É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ)
    await callback.answer()


@router.callback_query(F.data == "go_back")
async def go_back(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    user_id = data["user_id"]
    first_name = data["first_name"]
    lang_code = data["lang_code"]

    # URL –≤–∞—à–µ–≥–æ Web App
    web_app_url = f"https://lllang.site/index.html?user_id={user_id}"

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π Web App
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=BUTTONS["dictionary"][lang_code], web_app=WebAppInfo(url=web_app_url)),
        ],
        [
            InlineKeyboardButton(text=BUTTONS["find_partner"][lang_code], url="https://t.me/lllang_onlinebot"),
        ],
        [
            InlineKeyboardButton(text=BUTTONS["about_bot"][lang_code], callback_data="about"),
            InlineKeyboardButton(text=BUTTONS["support"][lang_code], url="https://t.me/user_bot6426"),
        ],
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.edit_text(
        f"{BUTTONS["hello"][lang_code]}<b>{first_name}</b>!\n\n{QUESTIONARY["welcome"][lang_code]}",
        reply_markup=keyboard, parse_mode=ParseMode.HTML)
    await callback.answer()